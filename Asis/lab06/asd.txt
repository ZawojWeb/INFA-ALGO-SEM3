#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <signal.h>
#include <sys/types.h>
#include <sys/wait.h>

int scount = 0;


void childhandler(){
	scount++;
}

void parenthandler(){
	printf("Total signals get: %d\n:", scount);
	exit(0); 
}

int main(){
	pid_t pid;
	signal(SIGUSR1, childhandler);
	pid = fork();
	if (pid == 0){
		signal(SIGINT, parenthandler);
		while(1);
	}
	else if (pid>0){
		for(int i = 0; i<1000000; i++){
			kill(pid,SIGUSR1);
		}
	}
	printf("All signals sent\n");
	kill(pid,SIGINT);
	int status;
	waitpid(pid,&status, WUNTRACED);
	return 0;
}